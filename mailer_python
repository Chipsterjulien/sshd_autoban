#!/usr/bin/env python3
# -*- coding: utf-8 -*-


import os
import sys
import smtplib
import logging
import yaml
import subprocess
import datetime
from email.mime.text import MIMEText

logging.basicConfig(filename='/var/log/sshd_autoban/error_mail.log',
                    format='%(asctime)s %(message)s', level=logging.DEBUG)

# Chargement du fichier de configuration
data = None
try:
    file_yaml = open('/etc/sshd_autoban/sshd_autoban.conf', 'r')
    data      = yaml.safe_load(file_yaml.read())
    file_yaml.close()

except yaml.parser.ParserError as e:
    print("Unable to load configuration. Mistake : \"{0}\"\nVerify you have start systemd-journal-gatewayd.service".format(e))
    logging.critical("Unable to load configuration. Mistake : \"{0}\"\nVerify you have start systemd-journal-gatewayd.service".format(e))
    sys.exit(1)

if not data:
    print("\"{0}\" is an empty file !".format(conf))
    logging.critical("\"{0}\" is an empty file !".format(conf))
    sys.exit(1)

# On va forker
try:
    pid = os.fork()
    if pid > 0:
        sys.exit(0)

except OSError as e:
    logging.critical("Unable to fork ! {0}, {1}".format(e.strerror, e.errno))
    sys.exit(1)

os.chdir("/")
os.setsid()
os.umask(0)

try:
    pid = os.fork()
    if pid > 0:
        sys.exit(0)

except OSError as e:
    logging.critical("Unable to fork ! {0}, {1}".format(e.strerror, e.errno))
    sys.exit(1)

ip  = sys.argv[1]
out = subprocess.getoutput('whois {0}'.format(ip)).split('\n')
to  = None

for line in out:
    if 'abuse'in line:
        for word in line.split(' '):
            if '@' in word:
                to = word
                break
        break

if to == None:
    logging.info("There aren't abuse email for the IP \"{0}\" !".format(ip))

From = data['email']
text = "Hello.n\nHours utc : {0}\n\nI inform you that following the ip \"{1}\" address has been used a few seconds ago to attack my computer.\nThank you for making the necessary\n\nBest regards\nJulien".format(datetime.datetime.utcnow(), ip)
msg  = MIMEText(text, 'plain', 'utf-8')
msg['Subject'] = "Your IP \"{0}\" attacked my computer".format(ip)
msg['From']    = From

try:
    server = None
    if data['ssl']:
        server = smtplib.SMTP_SSL(data['smtp'], data['port'])
    elif not data['ssl']:
        server = smtplib.SMTP(data['smtp'], data['port'])
    else:
        logging.critical('ssl option unknown in config file')
        sys.exit(1)

    server.set_debuglevel(False)
    server.ehlo
    server.login(data['login'], data['password'])
    try:
        server.sendmail(From, to, msg.as_string())
    finally:
        server.quit()

    logging.info("Mail where send to \"{0}\"".format(to))

except Exception as e:
    logging.error("Unable to send a mail; {0}".format(str(e)))
    sys.exit(1)
